@page "/login"
@using System.Security.Claims
@using System.ComponentModel.DataAnnotations
@using Microsoft.AspNetCore.Authentication
@using Microsoft.AspNetCore.Authentication.Cookies
@inject NavigationManager Navigation
@inject IHttpContextAccessor HttpContextAccessor

<h3>Giriş Yap</h3>

@if (!string.IsNullOrEmpty(ErrorMessage))
{
    <div class="alert alert-danger">@ErrorMessage</div>
}

<EditForm Model="loginModel" OnValidSubmit="HandleLogin">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <div class="form-group">
        <label for="username">Kullanıcı Adı</label>
        <InputText id="username" class="form-control" @bind-Value="loginModel.Username" />
    </div>
    <div class="form-group">
        <label for="password">Şifre</label>
        <InputText id="password" type="password" class="form-control" @bind-Value="loginModel.Password" />
    </div>
    <button type="submit" class="btn btn-primary">Giriş Yap</button>
</EditForm>

@code {
    private LoginModel loginModel = new LoginModel();
    private string ErrorMessage;

    private async Task HandleLogin()
    {
        // Örnek doğrulama: demo amaçlı, username "user" ve password "password" kontrol ediliyor.
        if (loginModel.Username == "user" && loginModel.Password == "password")
        {
            // Kullanıcıya ait claim'ler oluşturuluyor.
            var claims = new List<Claim>
            {
                new Claim(ClaimTypes.Name, loginModel.Username)
                // Gerekirse rol veya diğer claim'ler de ekleyebilirsiniz.
            };

            var identity = new ClaimsIdentity(claims, "MyCookieScheme");
            var principal = new ClaimsPrincipal(identity);

            // IHttpContextAccessor ile HttpContext üzerinden cookie oluşturuluyor.
            var httpContext = HttpContextAccessor.HttpContext;
            if (httpContext != null)
            {
                await httpContext.SignInAsync("MyCookieScheme", principal);
                Navigation.NavigateTo("/");
            }
        }
        else
        {
            ErrorMessage = "Geçersiz kullanıcı adı veya şifre.";
        }
    }

    public class LoginModel
    {
        [Required(ErrorMessage = "Kullanıcı adı gerekli")]
        public string Username { get; set; }

        [Required(ErrorMessage = "Şifre gerekli")]
        public string Password { get; set; }
    }
}
