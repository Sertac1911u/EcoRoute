@inject IJSRuntime JS

@if (IsOpen)
{
    <div class="fixed inset-0 z-50 flex items-center justify-center p-4" @onclick="OnCancel">
        <!-- Backdrop -->
        <div class="fixed inset-0 bg-black/50"></div>

            <!-- Modal -->
            <div class="relative bg-white dark:bg-gray-800 rounded-xl shadow-xl w-full max-w-md border border-gray-200 dark:border-gray-700"
                 @onclick:stopPropagation="true">

                <!-- Header with Icon -->
                <div class="p-6 text-center">
                    <!-- Icon Container -->
                    <div class="mx-auto flex h-16 w-16 items-center justify-center rounded-xl @GetIconContainerClass() mb-4">
                        <i class="fas @Icon text-2xl @GetIconColorClass()"></i>
                    </div>

                    <!-- Title -->
                    <h3 class="text-lg font-bold text-gray-900 dark:text-white mb-2">
                        @Title
                    </h3>

                    <!-- Message -->
                    <p class="text-gray-600 dark:text-gray-400 text-sm">
                        @Message
                    </p>
                </div>

                <!-- Actions -->
                <div class="flex gap-3 p-6 pt-0">
                    <button class="flex-1 px-4 py-2 bg-gray-100 dark:bg-gray-700 hover:bg-gray-200 dark:hover:bg-gray-600 text-gray-700 dark:text-gray-300 rounded-lg font-medium disabled:opacity-50 disabled:cursor-not-allowed"
                            @onclick="OnCancel"
                            disabled="@IsLoading">
                        <i class="fas fa-times mr-2"></i>
                        İptal
                    </button>
                    
                    <button class="flex-1 px-4 py-2 @GetConfirmButtonClass() text-white rounded-lg font-medium disabled:opacity-50 disabled:cursor-not-allowed min-h-[40px] flex items-center justify-center"
                            @onclick="OnConfirm"
                            disabled="@IsLoading">
                        @if (IsLoading)
                        {
                            <div class="flex items-center">
                                <div class="animate-spin rounded-full h-4 w-4 border-2 border-white border-t-transparent mr-2"></div>
                                <span>Yükleniyor...</span>
                            </div>
                        }
                        else
                        {
                            <div class="flex items-center">
                                <i class="fas @GetConfirmIcon() mr-2"></i>
                                <span>@ConfirmButtonText</span>
                            </div>
                        }
                    </button>
                </div>
            </div>
        </div>
   
}

@code {
    [Parameter] public bool IsOpen { get; set; }
    [Parameter] public string Title { get; set; }
    [Parameter] public string Message { get; set; }
    [Parameter] public string ConfirmButtonText { get; set; }
    [Parameter] public string ConfirmButtonClass { get; set; }
    [Parameter] public string Icon { get; set; }
    [Parameter] public string IconClass { get; set; }
    [Parameter] public bool IsLoading { get; set; } = false;
    [Parameter] public EventCallback OnConfirm { get; set; }
    [Parameter] public EventCallback OnCancel { get; set; }

    private bool _previousIsOpen = false;

    protected override async Task OnParametersSetAsync()
    {
        if (IsOpen != _previousIsOpen)
        {
            _previousIsOpen = IsOpen;
            if (IsOpen)
            {
                await DisableBodyScroll();
            }
            else
            {
                await EnableBodyScroll();
            }
        }
    }

    private async Task DisableBodyScroll()
    {
        try
        {
            await JS.InvokeVoidAsync("eval", "document.body.style.overflow = 'hidden'");
        }
        catch { }
    }

    private async Task EnableBodyScroll()
    {
        try
        {
            await JS.InvokeVoidAsync("eval", "document.body.style.overflow = ''");
        }
        catch { }
    }

    private string GetConfirmButtonClass()
    {
        if (!string.IsNullOrEmpty(ConfirmButtonClass))
        {
            if (ConfirmButtonClass.Contains("red"))
                return "bg-red-500 hover:bg-red-600";
            else if (ConfirmButtonClass.Contains("green"))
                return "bg-green-500 hover:bg-green-600";
            else if (ConfirmButtonClass.Contains("primary"))
                return "bg-primary-500 hover:bg-primary-600";
            else
                return ConfirmButtonClass;
        }

        return "bg-primary-500 hover:bg-primary-600";
    }

    private string GetIconContainerClass()
    {
        if (!string.IsNullOrEmpty(Icon))
        {
            if (Icon.Contains("exclamation-triangle") || Icon.Contains("trash"))
                return "bg-red-100 dark:bg-red-900/20";
            else if (Icon.Contains("question"))
                return "bg-blue-100 dark:bg-blue-900/20";
            else if (Icon.Contains("user-plus"))
                return "bg-green-100 dark:bg-green-900/20";
            else
                return "bg-primary-100 dark:bg-primary-900/20";
        }

        return "bg-primary-100 dark:bg-primary-900/20";
    }

    private string GetIconColorClass()
    {
        if (!string.IsNullOrEmpty(Icon))
        {
            if (Icon.Contains("exclamation-triangle") || Icon.Contains("trash"))
                return "text-red-600 dark:text-red-400";
            else if (Icon.Contains("question"))
                return "text-blue-600 dark:text-blue-400";
            else if (Icon.Contains("user-plus"))
                return "text-green-600 dark:text-green-400";
            else
                return "text-primary-600 dark:text-primary-400";
        }

        return "text-primary-600 dark:text-primary-400";
    }

    private string GetConfirmIcon()
    {
        if (!string.IsNullOrEmpty(Icon))
        {
            if (Icon.Contains("exclamation-triangle") || Icon.Contains("trash"))
                return "fa-trash";
            else if (Icon.Contains("user-plus"))
                return "fa-plus";
            else
                return "fa-check";
        }

        return "fa-check";
    }
}