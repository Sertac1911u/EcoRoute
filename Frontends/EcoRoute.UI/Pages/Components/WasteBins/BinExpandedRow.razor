@using EcoRoute.DtoLayer.WasteBinDtos

<tr class="bg-gray-50 dark:bg-gray-700 animate-expandRow">
    <td colspan="7" class="px-6 py-6">
        <div class="grid grid-cols-1 md:grid-cols-3 gap-6">
            <!-- Genel Bilgiler -->
            <div class="bg-white dark:bg-gray-800 p-5 rounded-lg shadow-md transform transition-all duration-300 hover:scale-105">
                <div class="flex justify-between items-center mb-4">
                    <h3 class="text-lg font-semibold text-gray-800 dark:text-white flex items-center">
                        <i class="fas fa-info-circle mr-2 text-blue-500"></i>
                        Genel Bilgiler
                    </h3>
                    <span class="@(Bin.IsFilled == true ? "bg-red-100 text-red-800 dark:bg-red-900/20 dark:text-red-300" : "bg-green-100 text-green-800 dark:bg-green-900/20 dark:text-green-300") px-2 py-1 rounded-full text-xs">
                        @(Bin.IsFilled == true ? "Dolu" : "Boş")
                    </span>
                </div>

                <div class="space-y-3">
                    <div class="flex justify-between items-center border-b border-gray-200 dark:border-gray-700 pb-2">
                        <span class="text-sm text-gray-500 dark:text-gray-400">Oluşturulma Tarihi:</span>
                        <span class="text-sm font-medium text-gray-800 dark:text-gray-200">@Bin.CreatedAt.ToString("dd.MM.yyyy HH:mm")</span>
                    </div>
                    <div class="flex justify-between items-center border-b border-gray-200 dark:border-gray-700 pb-2">
                        <span class="text-sm text-gray-500 dark:text-gray-400">Güncellenme Tarihi:</span>
                        <span class="text-sm font-medium text-gray-800 dark:text-gray-200">@Bin.UpdatedAt.ToString("dd.MM.yyyy HH:mm")</span>
                    </div>
                    <div class="flex justify-between items-center border-b border-gray-200 dark:border-gray-700 pb-2">
                        <span class="text-sm text-gray-500 dark:text-gray-400">Doluluk Seviyesi:</span>
                        <span class="text-sm font-medium @GetTextColorByFillLevel(Bin.FillLevel)">@(Bin.FillLevel ?? 0)%</span>
                    </div>
                    <div class="flex justify-between items-center">
                        <span class="text-sm text-gray-500 dark:text-gray-400">Durum:</span>
                        <span class="text-sm font-medium @GetDeviceStatusTextColor(Bin.DeviceStatus)">
                            @GetDeviceStatusText(Bin.DeviceStatus)
                        </span>
                    </div>
                </div>
            </div>

            <!-- Doluluk Durumu -->
            <div class="bg-white dark:bg-gray-800 p-5 rounded-lg shadow-md transform transition-all duration-300 hover:scale-105">
                <div class="flex justify-between items-center mb-4">
                    <h3 class="!text-lg font-semibold text-gray-800 dark:text-white flex items-center">
                        <i class="fas fa-chart-line mr-2 text-amber-500"></i>
                        Doluluk Durumu
                    </h3>
                </div>

                <div class="flex flex-col items-center justify-center space-y-3 py-2">
                    <div class="relative w-32 h-32">
                        <svg class="w-full h-full" viewBox="0 0 36 36">
                            <path class="stroke-current text-gray-200 dark:text-gray-700" fill="none" stroke-width="3.8" d="M18 2.0845 a 15.9155 15.9155 0 0 1 0 31.831 a 15.9155 15.9155 0 0 1 0 -31.831" />
                            <path class="@GetStrokeFillColor(Bin.FillLevel) stroke-current" fill="none" stroke-width="3.8" stroke-linecap="round"
                                  stroke-dasharray="@((Bin.FillLevel ?? 0) * 100 / 100), 100" d="M18 2.0845 a 15.9155 15.9155 0 0 1 0 31.831 a 15.9155 15.9155 0 0 1 0 -31.831">
                                <animate attributeName="stroke-dasharray"
                                         from="0, 100"
                                         to="@((Bin.FillLevel ?? 0) * 100 / 100), 100"
                                         dur="1s"
                                         fill="freeze"
                                         calcMode="spline"
                                         keyTimes="0; 1"
                                         keySplines="0.42 0 0.58 1" />
                            </path>
                            <text x="18" y="20.5" class="fill-current font-bold text-gray-700 dark:text-gray-200" text-anchor="middle" font-size="@(Bin.FillLevel >= 100 ? "6" : "7")">@(Bin.FillLevel ?? 0)%</text>
                        </svg>
                    </div>

                    <div class="text-center">
                        <span class="inline-block px-3 py-1 rounded-full @GetFillStatusBadge(Bin.FillLevel)">
                            @GetFillStatusText(Bin.FillLevel)
                        </span>
                    </div>

                    <div class="mt-2 space-y-2">
                        <div class="flex justify-between items-center border-t border-gray-200 dark:border-gray-700 pt-2">
                            <span class="text-sm text-gray-500 dark:text-gray-400">Tahmini dolma tarihi:</span>
                            <span class="font-medium text-gray-700 dark:text-gray-300">@GetEstimatedFillDate(Bin.FillLevel)</span>
                        </div>

                        <div class="flex justify-between items-center">
                            <span class="text-sm text-gray-500 dark:text-gray-400">3 Gün Sonra Doluluk:</span>
                            <span class="font-medium @GetTextColorByFillLevel(GetEstimatedFillRate(Bin.FillLevel, 3))">
                                %@GetEstimatedFillRate(Bin.FillLevel, 3).ToString("0")
                            </span>
                        </div>

                        <div class="flex justify-between items-center">
                            <span class="text-sm text-gray-500 dark:text-gray-400">7 Gün Sonra Doluluk:</span>
                            <span class="font-medium @GetTextColorByFillLevel(GetEstimatedFillRate(Bin.FillLevel, 7))">
                                %@GetEstimatedFillRate(Bin.FillLevel, 7).ToString("0")
                            </span>
                        </div>
                    </div>
                    <div class="text-sm text-gray-500 dark:text-gray-400 mt-2">
                        Son güncelleme: @Bin.UpdatedAt.ToString("dd.MM.yyyy HH:mm")
                    </div>
                </div>
            </div>

            <!-- Sensörler -->
            <div class="bg-white dark:bg-gray-800 p-5 rounded-lg shadow-md transform transition-all duration-300 hover:scale-105">
                <div class="flex justify-between items-center mb-4">
                    <h3 class="text-lg font-semibold text-gray-800 dark:text-white flex items-center">
                        <i class="fas fa-microchip mr-2 text-green-500"></i>
                        Sensörler
                    </h3>
                    <div class="flex items-center space-x-2">
                        <span class="bg-gray-100 text-gray-800 dark:bg-gray-700 dark:text-gray-300 px-2 py-1 rounded-full text-xs">
                            @(Bin.Sensors?.Count ?? 0) adet
                        </span>
                        <span class="text-green-500 text-sm font-medium bg-green-50 dark:bg-green-900/20 px-2 py-1 rounded-md">
                            <i class="fas fa-info-circle mr-1"></i>
                            Düzenle modunda sensör ekleyin
                        </span>
                    </div>
                </div>

                <div class="space-y-3 max-h-60 overflow-y-auto">
                    @if (Bin.Sensors != null && Bin.Sensors.Any())
                    {
                        foreach (var sensor in Bin.Sensors)
                        {
                            <div class="bg-gray-50 dark:bg-gray-700 p-3 rounded-lg border-l-4 @GetSensorBorderColor(sensor.IsActive) transition-transform duration-300 hover:translate-x-1">
                                <div class="flex justify-between items-start">
                                    <div class="flex-1">
                                        <div class="flex justify-between items-center mb-1">
                                            <span class="font-medium text-gray-800 dark:text-white">@sensor.Type</span>
                                            <div class="flex items-center space-x-1">
                                                <!-- Status Toggle Button -->
                                                <button class="@(sensor.IsActive ? "text-green-500 hover:text-green-700" : "text-gray-400 hover:text-green-500") text-sm tooltip-container"
                                                        @onclick="() => OnToggleSensorStatus.InvokeAsync(new Tuple<Guid, bool>(sensor.SensorId, sensor.IsActive))">
                                                    <i class="fas @(sensor.IsActive ? "fa-toggle-on" : "fa-toggle-off")"></i>
                                                    <span class="tooltip">@(sensor.IsActive ? "Pasif Yap" : "Aktif Yap")</span>
                                                </button>

                                                <!-- Edit Button -->
                                                <button class="text-blue-500 hover:text-blue-700 text-sm tooltip-container"
                                                        @onclick="() => OnEditSensor.InvokeAsync(sensor)">
                                                    <i class="fas fa-edit"></i>
                                                    <span class="tooltip">Düzenle</span>
                                                </button>

                                                <!-- Delete Button -->
                                                <button class="text-red-500 hover:text-red-700 text-sm tooltip-container"
                                                        @onclick="() => OnDeleteSensor.InvokeAsync(sensor.SensorId)">
                                                    <i class="fas fa-trash"></i>
                                                    <span class="tooltip">Sil</span>
                                                </button>
                                            </div>
                                        </div>

                                        <div class="flex justify-between items-center mb-1">
                                            <span class="@(sensor.IsActive ? "text-green-500" : "text-red-500") text-xs flex items-center">
                                                <i class="fas @(sensor.IsActive ? "fa-check-circle" : "fa-times-circle") mr-1 @(sensor.IsActive ? "animate-pulse" : "")"></i>
                                                @(sensor.IsActive ? "Aktif" : "Pasif")
                                            </span>
                                            <span class="text-xs text-gray-500 dark:text-gray-400">
                                                ID: @sensor.SensorId.ToString()[..8]...
                                            </span>
                                        </div>

                                        <div class="text-xs text-gray-500 dark:text-gray-400 space-y-1">
                                            <div class="flex justify-between">
                                                <span>Kurulum:</span>
                                                <span>@(sensor.InstallationDate?.ToString("dd.MM.yyyy") ?? "-")</span>
                                            </div>
                                            <div class="flex justify-between">
                                                <span>Son Güncelleme:</span>
                                                <span>@(sensor.LastUpdate?.ToString("dd.MM.yyyy") ?? "-")</span>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }
                    }
                    else
                    {
                        <div class="bg-gray-50 dark:bg-gray-700 p-4 rounded text-center">
                            <div class="text-gray-400 mb-2">
                                <i class="fas fa-microchip text-2xl"></i>
                            </div>
                            <p class="text-sm text-gray-500 dark:text-gray-400 mb-2">Sensör bulunamadı</p>
                            <p class="text-xs text-gray-400 dark:text-gray-500">
                                Sensör eklemek için atık kutusunu düzenleyin
                            </p>
                        </div>
                    }
                </div>
            </div>
        </div>
    </td>
</tr>

@code {
    [Parameter] public ResultWasteBinDto Bin { get; set; }

    // Sensor management events
    [Parameter] public EventCallback<ResultSensorDto> OnEditSensor { get; set; }
    [Parameter] public EventCallback<Guid> OnDeleteSensor { get; set; }
    [Parameter] public EventCallback<Tuple<Guid, bool>> OnToggleSensorStatus { get; set; }

    // Belirli bir tarihteki tahmini doluluk oranı
    private const double DAILY_FILL_RATE = 5.0; // Günlük ortalama doluluk artışı yüzdesi

    private double GetEstimatedFillRate(double? currentFillLevel, int daysFromNow)
    {
        if (!currentFillLevel.HasValue)
            return 0;

        double estimatedFill = currentFillLevel.Value + (DAILY_FILL_RATE * daysFromNow);
        return Math.Min(estimatedFill, 100);
    }

    // Tahmini dolma tarihi
    private string GetEstimatedFillDate(double? fillLevel)
    {
        if (!fillLevel.HasValue || fillLevel >= 100)
            return "Bilinmiyor";

        double remainingCapacity = 100 - fillLevel.Value;
        int daysUntilFull = (int)Math.Ceiling(remainingCapacity / DAILY_FILL_RATE);
        DateTime estimatedDate = DateTime.Now.AddDays(daysUntilFull);

        return estimatedDate.ToString("dd.MM.yyyy");
    }

    private string GetDeviceStatusTextColor(string status)
    {
        return status switch
        {
            "Active" => "text-green-600 dark:text-green-400",
            "Inactive" => "text-gray-600 dark:text-gray-400",
            "Maintenance" => "text-yellow-600 dark:text-yellow-400",
            "Faulty" => "text-red-600 dark:text-red-400",
            _ => "text-gray-600 dark:text-gray-400"
        };
    }

    private string GetDeviceStatusText(string status)
    {
        return status switch
        {
            "Active" => "Aktif",
            "Inactive" => "Pasif",
            "Maintenance" => "Bakımda",
            "Faulty" => "Arızalı",
            _ => status
        };
    }

    private string GetTextColorByFillLevel(double? fillLevel)
    {
        if (!fillLevel.HasValue) return "text-gray-500";

        return fillLevel switch
        {
            >= 90 => "text-red-500",
            >= 70 => "text-orange-500",
            >= 50 => "text-yellow-500",
            >= 30 => "text-blue-500",
            _ => "text-green-500"
        };
    }

    private string GetStrokeFillColor(double? fillLevel)
    {
        if (!fillLevel.HasValue) return "text-gray-500";

        return fillLevel switch
        {
            >= 90 => "text-red-500",
            >= 70 => "text-orange-500",
            >= 50 => "text-yellow-500",
            >= 30 => "text-blue-500",
            _ => "text-green-500"
        };
    }

    private string GetFillStatusBadge(double? fillLevel)
    {
        if (!fillLevel.HasValue) return "bg-gray-100 text-gray-800";

        return fillLevel switch
        {
            >= 90 => "bg-red-100 text-red-800 dark:bg-red-900/20 dark:text-red-400",
            >= 70 => "bg-orange-100 text-orange-800 dark:bg-orange-900/20 dark:text-orange-400",
            >= 50 => "bg-yellow-100 text-yellow-800 dark:bg-yellow-900/20 dark:text-yellow-400",
            _ => "bg-green-100 text-green-800 dark:bg-green-900/20 dark:text-green-400"
        };
    }

    private string GetFillStatusText(double? fillLevel)
    {
        if (!fillLevel.HasValue) return "Durum Bilinmiyor";

        return fillLevel switch
        {
            >= 90 => "Acil Boşaltılmalı",
            >= 70 => "Yakında Boşaltılmalı",
            >= 50 => "Orta Doluluk",
            _ => "Boşaltma Gerekmiyor"
        };
    }

    private string GetSensorBorderColor(bool isActive)
    {
        return isActive ? "border-green-500" : "border-red-500";
    }
}