@using EcoRoute.DtoLayer.WasteBinDtos
@using Microsoft.JSInterop
@inject IJSRuntime JS

@if (ShowModal)
{
    <div class="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-[60]">
        <div class="bg-white dark:bg-gray-800 rounded-lg shadow-xl w-full max-w-4xl h-[80vh] flex flex-col animate-modal-show">
            <div class="flex justify-between items-center p-4 border-b border-gray-200 dark:border-gray-700">
                <h3 class="text-xl font-semibold text-gray-800 dark:text-white">
                    Konum Seç
                </h3>
                <button class="text-gray-400 hover:text-gray-600 dark:hover:text-gray-300" @onclick="OnClose">
                    <i class="fas fa-times text-xl"></i>
                </button>
            </div>
            <div class="p-4 flex-grow">
                <div class="mb-4 bg-blue-50 dark:bg-blue-900/20 text-blue-800 dark:text-blue-300 p-3 rounded-lg text-sm">
                    <i class="fas fa-info-circle mr-2"></i> Haritada istediğiniz konuma tıklayarak atık kutusu konumu belirleyebilirsiniz.
                </div>
                <div class="bg-white dark:bg-gray-800 rounded-lg h-[calc(100%-3rem)] overflow-hidden border border-gray-300 dark:border-gray-600 relative">
                    <div id="location-picker-map" class="w-full h-full rounded-lg"></div>
                </div>
            </div>
            <div class="p-4 border-t border-gray-200 dark:border-gray-700 flex justify-between items-center">
                <div class="text-sm text-gray-600 dark:text-gray-400">
                    <i class="fas fa-map-marker-alt text-red-500 mr-1"></i>
                    <span id="selected-coordinates">Koordinat: @BinModel.Latitude, @BinModel.Longitude</span>
                </div>
                <div class="flex space-x-3">
                    <button class="px-4 py-2 bg-gray-200 hover:bg-gray-300 text-gray-800 rounded-md transition-colors" @onclick="OnClose">
                        İptal
                    </button>
                    <button class="px-4 py-2 bg-primary-500 hover:bg-primary-600 text-white rounded-md transition-colors" @onclick="OnConfirm">
                        Konumu Seç
                    </button>
                </div>
            </div>
        </div>
    </div>
}

@code {
    [Parameter] public bool ShowModal { get; set; }
    [Parameter] public CreateWasteBinDto BinModel { get; set; }
    [Parameter] public List<ResultWasteBinDto> WasteBins { get; set; }
    [Parameter] public Guid EditingId { get; set; }
    [Parameter] public bool IsEdit { get; set; }

    [Parameter] public EventCallback OnClose { get; set; }
    [Parameter] public EventCallback OnConfirm { get; set; }
    [Parameter] public EventCallback<Tuple<double, double>> OnCoordinatesUpdate { get; set; }
    [Parameter] public EventCallback<string> OnAddressUpdate { get; set; }

    private bool locationPickerMapInitialized = false;

    protected override async Task OnParametersSetAsync()
    {
        if (ShowModal && !locationPickerMapInitialized)
        {
            await Task.Delay(100);
            await InitializeLocationPickerMap();
        }
        else if (!ShowModal)
        {
            locationPickerMapInitialized = false;
        }
    }

    private async Task InitializeLocationPickerMap()
    {
        if (ShowModal)
        {
            try
            {
                await Task.Delay(200);

                double lat = BinModel.Latitude != 0 ? BinModel.Latitude : 41.1634;
                double lng = BinModel.Longitude != 0 ? BinModel.Longitude : 27.7951;

                await JS.InvokeVoidAsync("googleMapsInterop.initializeLocationPickerMap",
                    "location-picker-map", lat, lng);

                if (WasteBins?.Any() == true)
                {
                    var binsJson = System.Text.Json.JsonSerializer.Serialize(
                        IsEdit
                            ? WasteBins.Where(b => b.Id != EditingId).ToList()
                            : WasteBins
                    );
                    await JS.InvokeVoidAsync("googleMapsInterop.showBinsOnPickerMap", binsJson);
                }

                locationPickerMapInitialized = true;
            }
            catch (Exception ex)
            {
                Console.Error.WriteLine($"Error initializing location picker map: {ex.Message}");
            }
        }
    }
}