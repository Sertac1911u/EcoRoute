@using EcoRoute.DtoLayer.WasteBinDtos

<div class="grid grid-cols-1 md:grid-cols-3 gap-6">
    <!-- Genel Bilgiler -->
    <div class="bg-white dark:bg-gray-800 p-5 rounded-lg shadow-md transform transition-all duration-300 hover:scale-105 detail-card">
        <div class="flex justify-between items-center mb-4">
            <h3 class="text-lg font-semibold text-gray-800 dark:text-white flex items-center">
                <i class="fas fa-info-circle mr-2 text-blue-500"></i>
                Genel Bilgiler
            </h3>
            <span class="@(Bin.IsFilled == true ? "bg-red-100 text-red-800 dark:bg-red-900/20 dark:text-red-300" : "bg-green-100 text-green-800 dark:bg-green-900/20 dark:text-green-300") px-2 py-1 rounded-full text-xs">
                @(Bin.IsFilled == true ? "Dolu" : "Boş")
            </span>
        </div>
        <div class="space-y-3">
            <div class="flex justify-between items-center border-b border-gray-200 dark:border-gray-700 pb-2">
                <span class="text-sm text-gray-500 dark:text-gray-400">Oluşturulma Tarihi:</span>
                <span class="text-sm font-medium text-gray-800 dark:text-gray-200">@Bin.CreatedAt.ToString("dd.MM.yyyy HH:mm")</span>
            </div>
            <div class="flex justify-between items-center border-b border-gray-200 dark:border-gray-700 pb-2">
                <span class="text-sm text-gray-500 dark:text-gray-400">Güncellenme Tarihi:</span>
                <span class="text-sm font-medium text-gray-800 dark:text-gray-200">@Bin.UpdatedAt.ToString("dd.MM.yyyy HH:mm")</span>
            </div>
            <div class="flex justify-between items-center border-b border-gray-200 dark:border-gray-700 pb-2">
                <span class="text-sm text-gray-500 dark:text-gray-400">Doluluk Seviyesi:</span>
                <span class="text-sm font-medium @GetTextColorByFillLevel(Bin.FillLevel)">@(Bin.FillLevel ?? 0)%</span>
            </div>
            <div class="flex justify-between items-center">
                <span class="text-sm text-gray-500 dark:text-gray-400">Durum:</span>
                <span class="text-sm font-medium @GetDeviceStatusTextColor(Bin.DeviceStatus)">
                    @GetDeviceStatusText(Bin.DeviceStatus)
                </span>
            </div>
        </div>
    </div>

    <!-- Doluluk Durumu -->
    <div class="bg-white dark:bg-gray-800 p-5 rounded-lg shadow-md transform transition-all duration-300 hover:scale-105 detail-card">
        <div class="flex justify-between items-center mb-4">
            <h3 class="!text-lg font-semibold text-gray-800 dark:text-white flex items-center">
                <i class="fas fa-chart-line mr-2 text-amber-500"></i>
                Doluluk Durumu
            </h3>
        </div>
        <div class="flex flex-col items-center justify-center space-y-3 py-2">
            <div class="relative w-32 h-32">
                <svg class="w-full h-full" viewBox="0 0 36 36">
                    <path class="stroke-current text-gray-200 dark:text-gray-700" fill="none" stroke-width="3.8" d="M18 2.0845 a 15.9155 15.9155 0 0 1 0 31.831 a 15.9155 15.9155 0 0 1 0 -31.831" />
                    <path class="@GetStrokeFillColor(Bin.FillLevel) stroke-current" fill="none" stroke-width="3.8" stroke-linecap="round"
                          stroke-dasharray="@((Bin.FillLevel ?? 0) * 100 / 100), 100" d="M18 2.0845 a 15.9155 15.9155 0 0 1 0 31.831 a 15.9155 15.9155 0 0 1 0 -31.831">
                        <animate attributeName="stroke-dasharray" from="0, 100" to="@((Bin.FillLevel ?? 0) * 100 / 100), 100" dur="1s" fill="freeze" calcMode="spline" keyTimes="0; 1" keySplines="0.42 0 0.58 1" />
                    </path>
                    <text x="18" y="20.5" class="fill-current font-bold text-gray-700 dark:text-gray-200" text-anchor="middle" font-size="@(Bin.FillLevel >= 100 ? "6" : "7")">@(Bin.FillLevel ?? 0)%</text>
                </svg>
            </div>
            <div class="text-center">
                <span class="inline-block px-3 py-1 rounded-full @GetFillStatusBadge(Bin.FillLevel)">
                    @GetFillStatusText(Bin.FillLevel)
                </span>
            </div>
            <div class="mt-2 space-y-2 w-full">
                <div class="flex justify-between items-center border-t border-gray-200 dark:border-gray-700 pt-2">
                    <span class="text-sm text-gray-500 dark:text-gray-400">Tahmini dolma tarihi:</span>
                    <span class="font-medium text-gray-700 dark:text-gray-300">@GetEstimatedFillDate(Bin.FillLevel)</span>
                </div>
                <div class="flex justify-between items-center">
                    <span class="text-sm text-gray-500 dark:text-gray-400">3 Gün Sonra Doluluk:</span>
                    <span class="font-medium @GetTextColorByFillLevel(GetEstimatedFillRate(Bin.FillLevel, 3))">
                        %@GetEstimatedFillRate(Bin.FillLevel, 3).ToString("0")
                    </span>
                </div>
                <div class="flex justify-between items-center">
                    <span class="text-sm text-gray-500 dark:text-gray-400">7 Gün Sonra Doluluk:</span>
                    <span class="font-medium @GetTextColorByFillLevel(GetEstimatedFillRate(Bin.FillLevel, 7))">
                        %@GetEstimatedFillRate(Bin.FillLevel, 7).ToString("0")
                    </span>
                </div>
            </div>
            <div class="text-sm text-gray-500 dark:text-gray-400 mt-2">
                Son güncelleme: @Bin.UpdatedAt.ToString("dd.MM.yyyy HH:mm")
            </div>
        </div>
    </div>

    <!-- Sensörler -->
    <div class="bg-white dark:bg-gray-800 p-5 rounded-lg shadow-md transform transition-all duration-300 hover:scale-105 detail-card">
        <div class="flex justify-between items-center mb-4">
            <h3 class="text-lg font-semibold text-gray-800 dark:text-white flex items-center">
                <i class="fas fa-microchip mr-2 text-green-500"></i>
                Sensörler
            </h3>
            <span class="bg-gray-100 text-gray-800 dark:bg-gray-700 dark:text-gray-300 px-2 py-1 rounded-full text-xs">
                @(Bin.Sensors?.Count ?? 0) adet
            </span>
        </div>
        <div class="space-y-3 max-h-60 overflow-y-auto">
            @if (Bin.Sensors != null && Bin.Sensors.Any())
            {
                foreach (var sensor in Bin.Sensors)
                {
                    <div class="bg-gray-50 dark:bg-gray-700 p-3 rounded-lg border-l-4 @GetSensorBorderColor(sensor.IsActive) transition-transform duration-300 hover:translate-x-1">
                        <div class="flex justify-between items-center mb-1">
                            <span class="font-medium text-gray-800 dark:text-white">@sensor.Type</span>
                            <span class="@(sensor.IsActive ? "text-green-500" : "text-red-500") text-xs flex items-center">
                                <i class="fas @(sensor.IsActive ? "fa-check-circle" : "fa-times-circle") mr-1 @(sensor.IsActive ? "animate-pulse" : "")"></i>
                                @(sensor.IsActive ? "Aktif" : "Pasif")
                            </span>
                        </div>
                        <div class="text-xs text-gray-500 dark:text-gray-400">
                            Son Güncelleme: @(sensor.LastUpdate?.ToString("dd.MM.yyyy") ?? "-")
                        </div>
                    </div>
                }
            }
            else
            {
                <div class="bg-gray-50 dark:bg-gray-700 p-3 rounded text-center">
                    <p class="text-sm text-gray-500 dark:text-gray-400">Sensör bulunamadı</p>
                </div>
            }
        </div>
    </div>
</div>

@code {
    [Parameter] public ResultWasteBinDto Bin { get; set; }

    // Helper methods for styling and calculations (copied from original component)
    private const double DAILY_FILL_RATE = 5.0;
    private double GetEstimatedFillRate(double? currentFillLevel, int daysFromNow) { if (!currentFillLevel.HasValue) return 0; double estimatedFill = currentFillLevel.Value + (DAILY_FILL_RATE * daysFromNow); return Math.Min(estimatedFill, 100); }
    private string GetEstimatedFillDate(double? fillLevel) { if (!fillLevel.HasValue || fillLevel >= 100) return "Bilinmiyor"; double remainingCapacity = 100 - fillLevel.Value; int daysUntilFull = (int)Math.Ceiling(remainingCapacity / DAILY_FILL_RATE); DateTime estimatedDate = DateTime.Now.AddDays(daysUntilFull); return estimatedDate.ToString("dd.MM.yyyy"); }
    private string GetTextColorByFillLevel(double? fillLevel) { if (!fillLevel.HasValue) return "text-gray-500"; return fillLevel switch { >= 90 => "text-red-500", >= 70 => "text-orange-500", >= 50 => "text-yellow-500", >= 30 => "text-blue-500", _ => "text-green-500" }; }
    private string GetDeviceStatusTextColor(string status) => status switch { "Active" => "text-green-600 dark:text-green-400", "Inactive" => "text-gray-600 dark:text-gray-400", "Maintenance" => "text-yellow-600 dark:text-yellow-400", "Faulty" => "text-red-600 dark:text-red-400", _ => "text-gray-600 dark:text-gray-400" };
    private string GetDeviceStatusText(string status) => status switch { "Active" => "Aktif", "Inactive" => "Pasif", "Maintenance" => "Bakımda", "Faulty" => "Arızalı", _ => status };
    private string GetStrokeFillColor(double? fillLevel) { if (!fillLevel.HasValue) return "text-gray-500"; return fillLevel switch { >= 90 => "text-red-500", >= 70 => "text-orange-500", >= 50 => "text-yellow-500", >= 30 => "text-blue-500", _ => "text-green-500" }; }
    private string GetFillStatusBadge(double? fillLevel) { if (!fillLevel.HasValue) return "bg-gray-100 text-gray-800"; return fillLevel switch { >= 90 => "bg-red-100 text-red-800 dark:bg-red-900/20 dark:text-red-400", >= 70 => "bg-orange-100 text-orange-800 dark:bg-orange-900/20 dark:text-orange-400", >= 50 => "bg-yellow-100 text-yellow-800 dark:bg-yellow-900/20 dark:text-yellow-400", _ => "bg-green-100 text-green-800 dark:bg-green-900/20 dark:text-green-400" }; }
    private string GetFillStatusText(double? fillLevel) { if (!fillLevel.HasValue) return "Durum Bilinmiyor"; return fillLevel switch { >= 90 => "Acil Boşaltılmalı", >= 70 => "Yakında Boşaltılmalı", >= 50 => "Orta Doluluk", _ => "Boşaltma Gerekmiyor" }; }
    private string GetSensorBorderColor(bool isActive) => isActive ? "border-green-500" : "border-red-500";
}