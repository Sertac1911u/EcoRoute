@using EcoRoute.DtoLayer.ReportsDtos
@inject EcoRoute.UI.Services.ReportsServices.IReportService ReportService
@inject IJSRuntime JS
@implements IAsyncDisposable

<div class="space-y-6 animate-fadeIn">
    <!-- Statistik Özet Kartları -->
    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4">
        <div class="bg-white dark:bg-slate-800 rounded-xl shadow-sm p-5 border border-gray-100 dark:border-slate-700 flex flex-col justify-between h-32">
            <div class="flex items-center mb-2">
                <div class="w-10 h-10 rounded-full bg-indigo-100 dark:bg-indigo-900/30 flex items-center justify-center mr-3">
                    <i class="fas fa-weight text-indigo-500 dark:text-indigo-400"></i>
                </div>
                <p class="text-sm font-medium text-gray-500 dark:text-gray-400">Toplam Emisyon (kg)</p>
            </div>
            <h3 class="text-2xl font-bold text-slate-800 dark:text-white">@($"{TotalCO2:N2}")</h3>
            <span class="text-xs text-gray-500 dark:text-gray-400 mt-1">son 30 gün</span>
        </div>

        <div class="bg-white dark:bg-slate-800 rounded-xl shadow-sm p-5 border border-gray-100 dark:border-slate-700 flex flex-col justify-between h-32">
            <div class="flex items-center mb-2">
                <div class="w-10 h-10 rounded-full bg-blue-100 dark:bg-blue-900/30 flex items-center justify-center mr-3">
                    <i class="fas fa-calendar-day text-blue-500 dark:text-blue-400"></i>
                </div>
                <p class="text-sm font-medium text-gray-500 dark:text-gray-400">Günlük Ortalama (kg)</p>
            </div>
            <h3 class="text-2xl font-bold text-slate-800 dark:text-white">@($"{AverageDailyCO2:N2}")</h3>
            <span class="text-xs text-gray-500 dark:text-gray-400 mt-1">son 30 gün</span>
        </div>

        <div class="bg-white dark:bg-slate-800 rounded-xl shadow-sm p-5 border border-gray-100 dark:border-slate-700 flex flex-col justify-between h-32">
            <div class="flex items-center mb-2">
                <div class="w-10 h-10 rounded-full bg-red-100 dark:bg-red-900/30 flex items-center justify-center mr-3">
                    <i class="fas fa-arrow-up text-red-500 dark:text-red-400"></i>
                </div>
                <p class="text-sm font-medium text-gray-500 dark:text-gray-400">En Yüksek Günlük Emisyon</p>
            </div>
            <h3 class="text-2xl font-bold text-red-500 dark:text-red-400">@($"{MaxCO2:N2}")</h3>
            <span class="text-xs text-gray-500 dark:text-gray-400 mt-1">son 30 gün</span>
        </div>

        <div class="bg-white dark:bg-slate-800 rounded-xl shadow-sm p-5 border border-gray-100 dark:border-slate-700 flex flex-col justify-between h-32">
            <div class="flex items-center mb-2">
                <div class="w-10 h-10 rounded-full bg-emerald-100 dark:bg-emerald-900/30 flex items-center justify-center mr-3">
                    <i class="fas fa-route text-emerald-500 dark:text-emerald-400"></i>
                </div>
                <p class="text-sm font-medium text-gray-500 dark:text-gray-400">Rota Sayısı (Toplam)</p>
            </div>
            <h3 class="text-2xl font-bold text-slate-800 dark:text-white">@TotalRouteCount</h3>
            <span class="text-xs text-gray-500 dark:text-gray-400 mt-1">son 30 gün</span>
        </div>
    </div>

    <!-- CO2 Alan Grafiği -->
    <div class="bg-white dark:bg-slate-800 rounded-xl shadow-sm p-5 border border-gray-100 dark:border-slate-700">
        <div class="flex justify-between items-center mb-4">
            <h3 class="text-lg font-semibold text-slate-800 dark:text-white flex items-center">
                <i class="fas fa-chart-area text-primary-500 dark:text-primary-400 mr-2"></i>
                Günlük CO₂ Emisyon Grafiği
            </h3>
            <div class="flex items-center gap-2">
                <button @onclick='() => ChangeTimeframe("weekly")' class="text-sm px-3 py-1.5 rounded-lg @(Timeframe == "weekly" ? "bg-primary-500 text-white" : "bg-gray-100 dark:bg-slate-700 text-gray-700 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-slate-600") transition-colors" disabled="@IsLoading">
                    <i class="fas fa-calendar-week mr-1"></i> Haftalık
                </button>
                <button @onclick='() => ChangeTimeframe("monthly")' class="text-sm px-3 py-1.5 rounded-lg @(Timeframe == "monthly" ? "bg-primary-500 text-white" : "bg-gray-100 dark:bg-slate-700 text-gray-700 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-slate-600") transition-colors" disabled="@IsLoading">
                    <i class="fas fa-calendar-alt mr-1"></i> Aylık
                </button>
            </div>
        </div>
        <div class="h-64 relative">
            @if (IsLoading)
            {
                <div class="absolute inset-0 flex items-center justify-center bg-white/50 dark:bg-slate-800/50">
                    <div class="w-8 h-8 border-4 border-primary-500 border-t-transparent rounded-full animate-spin"></div>
                </div>
            }
            <canvas id="co2Chart" class="transition-all duration-500"></canvas>
        </div>
    </div>

    <!-- CO2 ve Rota Sayısı Karşılaştırma Grafiği -->
    <div class="bg-white dark:bg-slate-800 rounded-xl shadow-sm p-5 border border-gray-100 dark:border-slate-700">
        <div class="flex justify-between items-center mb-4">
            <h3 class="text-lg font-semibold text-slate-800 dark:text-white flex items-center">
                <i class="fas fa-chart-bar text-indigo-500 dark:text-indigo-400 mr-2"></i>
                CO₂ ve Rota Sayısı Karşılaştırması
            </h3>
            <div>
                <button class="text-sm px-3 py-1.5 rounded-lg bg-primary-100 text-primary-600 dark:bg-primary-900/40 dark:text-primary-300 hover:bg-primary-200 transition-colors" disabled="@IsLoading">
                    <i class="fas fa-file-export mr-1"></i> Dışa Aktar
                </button>
            </div>
        </div>
        <div class="h-64 relative">
            @if (IsLoading)
            {
                <div class="absolute inset-0 flex items-center justify-center bg-white/50 dark:bg-slate-800/50">
                    <div class="w-8 h-8 border-4 border-primary-500 border-t-transparent rounded-full animate-spin"></div>
                </div>
            }
            <canvas id="co2CompareChart" class="transition-all duration-500"></canvas>
        </div>
    </div>
</div>

@code {
    private List<CO2EmissionReportDto> ReportList = new();
    private string Timeframe = "monthly";
    private bool IsLoading = true;
    private CancellationTokenSource? _cancellationTokenSource;

    private double TotalCO2 => ReportList.Sum(r => r.CO2Kg);
    private double AverageDailyCO2 => ReportList.Count > 0 ? ReportList.Average(r => r.CO2Kg) : 0;
    private double MaxCO2 => ReportList.Count > 0 ? ReportList.Max(r => r.CO2Kg) : 0;
    private int TotalRouteCount => ReportList.Sum(r => r.RouteCount);

    protected override async Task OnInitializedAsync()
    {
        _cancellationTokenSource = new CancellationTokenSource();
        await LoadData();
    }

    private async Task LoadData()
    {
        try
        {
            IsLoading = true;
            StateHasChanged();

            ReportList = await ReportService.GetCO2EmissionReportAsync();

            // DOM'un hazır olmasını bekle
            await Task.Delay(100, _cancellationTokenSource?.Token ?? CancellationToken.None);

            await RenderCharts();
        }
        catch (OperationCanceledException)
        {
            // İptal edildi, hiçbir şey yapma
        }
        catch (Exception ex)
        {
            Console.WriteLine($"CO2 emission data loading error: {ex.Message}");
        }
        finally
        {
            IsLoading = false;
            StateHasChanged();
        }
    }

    private async Task ChangeTimeframe(string timeframe)
    {
        if (IsLoading) return;

        Timeframe = timeframe;
        await RenderCharts();
    }

    private async Task RenderCharts()
    {
        try
        {
            var chartData = ReportList.OrderBy(r => r.Date).ToList();

            // Zaman aralığına göre verileri filtrele
            if (Timeframe == "weekly")
            {
                chartData = chartData.TakeLast(7).ToList();
            }

            var chartLabels = chartData.Select(r => r.Date.ToString("dd.MM.yyyy")).ToArray();
            var co2Values = chartData.Select(r => r.CO2Kg).ToArray();
            var routeCounts = chartData.Select(r => r.RouteCount).ToArray();

            // CO2 Alan Grafiği - Güvenli çağrı
            await SafeJSInvoke("renderCO2Chart", chartLabels, co2Values);

            // CO2 ve Rota Sayısı Karşılaştırma Grafiği - Güvenli çağrı
            await SafeJSInvoke("renderCO2CompareChart", chartLabels, co2Values, routeCounts);
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Chart rendering error: {ex.Message}");
        }
    }

    private async Task SafeJSInvoke(string functionName, params object[] parameters)
    {
        try
        {
            await JS.InvokeVoidAsync(functionName, parameters);
        }
        catch (Exception ex)
        {
            Console.WriteLine($"JS function '{functionName}' error: {ex.Message}");
        }
    }

    public async ValueTask DisposeAsync()
    {
        _cancellationTokenSource?.Cancel();
        _cancellationTokenSource?.Dispose();

        // Chart instance'larını temizle
        try
        {
            await JS.InvokeVoidAsync("cleanupCO2Charts");
        }
        catch
        {
            // Sessizce göz ardı et
        }
    }
}

<script>
    // CO2 Alan Grafiği - Null check ile geliştirilmiş
    window.renderCO2Chart = (labels, data) => {
        try {
            if (!window.Chart) {
                console.warn('Chart.js is not loaded');
                return;
            }

            const canvas = document.getElementById('co2Chart');
            if (!canvas) {
                console.warn('CO2 chart canvas not found');
                return;
            }

            const ctx = canvas.getContext('2d');
            if (!ctx) {
                console.warn('Could not get 2D context for CO2 chart');
                return;
            }

            // Define gradient fill
            const gradient = ctx.createLinearGradient(0, 0, 0, 300);
            gradient.addColorStop(0, 'rgba(59,130,246,0.3)');
            gradient.addColorStop(1, 'rgba(59,130,246,0.02)');

            if (window._co2ChartInstance) {
                window._co2ChartInstance.destroy();
                window._co2ChartInstance = null;
            }

            window._co2ChartInstance = new Chart(ctx, {
                type: 'line',
                data: {
                    labels: labels,
                    datasets: [{
                        label: 'CO₂ (kg)',
                        data: data,
                        tension: 0.4,
                        borderWidth: 2,
                        borderColor: 'rgba(59,130,246,1)',
                        backgroundColor: gradient,
                        fill: true,
                        pointRadius: 3,
                        pointBackgroundColor: 'white',
                        pointBorderColor: 'rgba(59,130,246,1)',
                        pointBorderWidth: 2,
                        pointHoverRadius: 5,
                        pointHoverBackgroundColor: 'white',
                        pointHoverBorderColor: 'rgba(59,130,246,1)',
                        pointHoverBorderWidth: 2
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    interaction: {
                        mode: 'index',
                        intersect: false,
                    },
                    plugins: {
                        legend: { display: false },
                        tooltip: {
                            backgroundColor: 'rgba(17, 24, 39, 0.8)',
                            padding: 10,
                            titleFont: {
                                size: 13,
                                weight: 'bold'
                            },
                            bodyFont: {
                                size: 12
                            },
                            borderColor: 'rgba(59,130,246,0.3)',
                            borderWidth: 1,
                            cornerRadius: 6,
                            displayColors: false,
                            callbacks: {
                                title: function(tooltipItems) {
                                    return tooltipItems[0].label;
                                },
                                label: function(context) {
                                    return `${context.dataset.label}: ${context.raw.toFixed(2)} kg`;
                                }
                            }
                        }
                    },
                    scales: {
                        y: {
                            beginAtZero: true,
                            ticks: {
                                padding: 8,
                                font: { size: 11 }
                            },
                            grid: {
                                color: 'rgba(156, 163, 175, 0.1)'
                            }
                        },
                        x: {
                            ticks: {
                                padding: 8,
                                font: { size: 11 }
                            },
                            grid: {
                                display: false
                            }
                        }
                    },
                    animation: {
                        duration: 800,
                        easing: 'easeOutQuart'
                    }
                }
            });
        } catch (error) {
            console.error('Error rendering CO2 chart:', error);
        }
    };

    // CO2 ve Rota Sayısı Karşılaştırma Grafiği - Null check ile geliştirilmiş
    window.renderCO2CompareChart = (labels, co2Data, routeData) => {
        try {
            if (!window.Chart) {
                console.warn('Chart.js is not loaded');
                return;
            }

            const canvas = document.getElementById('co2CompareChart');
            if (!canvas) {
                console.warn('CO2 compare chart canvas not found');
                return;
            }

            const ctx = canvas.getContext('2d');
            if (!ctx) {
                console.warn('Could not get 2D context for CO2 compare chart');
                return;
            }

            if (window._co2CompareChartInstance) {
                window._co2CompareChartInstance.destroy();
                window._co2CompareChartInstance = null;
            }

            window._co2CompareChartInstance = new Chart(ctx, {
                type: 'bar',
                data: {
                    labels: labels,
                    datasets: [
                        {
                            label: 'CO₂ (kg)',
                            data: co2Data,
                            backgroundColor: 'rgba(59,130,246,0.7)',
                            borderColor: 'rgba(59,130,246,1)',
                            borderWidth: 1,
                            borderRadius: 4,
                            yAxisID: 'y'
                        },
                        {
                            label: 'Rota Sayısı',
                            data: routeData,
                            type: 'line',
                            backgroundColor: 'rgba(16,185,129,0.7)',
                            borderColor: 'rgba(16,185,129,1)',
                            borderWidth: 2,
                            pointRadius: 3,
                            pointBackgroundColor: 'white',
                            pointBorderColor: 'rgba(16,185,129,1)',
                            pointBorderWidth: 2,
                            tension: 0.4,
                            yAxisID: 'y1'
                        }
                    ]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    interaction: {
                        mode: 'index',
                        intersect: false,
                    },
                    plugins: {
                        legend: {
                            display: true,
                            position: 'top',
                            labels: {
                                usePointStyle: true,
                                padding: 15,
                                boxWidth: 8,
                                font: { size: 11 }
                            }
                        },
                        tooltip: {
                            backgroundColor: 'rgba(17, 24, 39, 0.8)',
                            padding: 10,
                            titleFont: {
                                size: 13,
                                weight: 'bold'
                            },
                            bodyFont: {
                                size: 12
                            },
                            borderColor: 'rgba(107, 114, 128, 0.3)',
                            borderWidth: 1,
                            cornerRadius: 6
                        }
                    },
                    scales: {
                        y: {
                            beginAtZero: true,
                            type: 'linear',
                            position: 'left',
                            title: {
                                display: true,
                                text: 'CO₂ (kg)',
                                font: { size: 11 }
                            },
                            ticks: {
                                padding: 8,
                                font: { size: 11 }
                            },
                            grid: {
                                color: 'rgba(156, 163, 175, 0.1)'
                            }
                        },
                        y1: {
                            beginAtZero: true,
                            type: 'linear',
                            position: 'right',
                            title: {
                                display: true,
                                text: 'Rota Sayısı',
                                font: { size: 11 }
                            },
                            ticks: {
                                padding: 8,
                                font: { size: 11 }
                            },
                            grid: {
                                drawOnChartArea: false
                            }
                        },
                        x: {
                            ticks: {
                                padding: 8,
                                font: { size: 11 }
                            },
                            grid: {
                                display: false
                            }
                        }
                    },
                    animation: {
                        duration: 800,
                        easing: 'easeOutQuart'
                    }
                }
            });
        } catch (error) {
            console.error('Error rendering CO2 compare chart:', error);
        }
    };

    // Chart cleanup function
    window.cleanupCO2Charts = () => {
        try {
            if (window._co2ChartInstance) {
                window._co2ChartInstance.destroy();
                window._co2ChartInstance = null;
            }
            if (window._co2CompareChartInstance) {
                window._co2CompareChartInstance.destroy();
                window._co2CompareChartInstance = null;
            }
        } catch (error) {
            console.error('Error cleaning up CO2 charts:', error);
        }
    };
</script>