@using EcoRoute.DtoLayer.ReportsDtos
@inject EcoRoute.UI.Services.ReportsServices.IReportService ReportService

<div class="space-y-6">
    <div class="flex flex-col md:flex-row md:items-center md:justify-between mb-4 gap-2">
        <h3 class="text-xl font-bold text-gray-800 dark:text-white">Tüm Rotalar Listesi</h3>
        <!-- Filtre/Arama -->
        <input class="input px-3 py-2 border rounded-lg w-full md:w-64 bg-gray-100 dark:bg-gray-800 text-gray-700 dark:text-gray-200"
               placeholder="Sürücü ismine göre ara..." @bind="search" @bind:event="oninput" />
    </div>

    <div class="bg-white dark:bg-gray-800 rounded-lg shadow-md p-4 overflow-x-auto">
        <table class="min-w-full divide-y divide-gray-200 dark:divide-gray-700">
            <thead class="bg-gray-50 dark:bg-gray-700">
                <tr>
                    <th class="px-4 py-2 text-left text-xs font-medium text-gray-500 dark:text-gray-200 uppercase">Rota ID</th>
                    <th class="px-4 py-2 text-left text-xs font-medium text-gray-500 dark:text-gray-200 uppercase">Sürücü</th>
                    <th class="px-4 py-2 text-left text-xs font-medium text-gray-500 dark:text-gray-200 uppercase">Durum</th>
                    <th class="px-4 py-2 text-left text-xs font-medium text-gray-500 dark:text-gray-200 uppercase">Oluşturulma</th>
                    <th class="px-4 py-2 text-left text-xs font-medium text-gray-500 dark:text-gray-200 uppercase">Mesafe (km)</th>
                    <th class="px-4 py-2 text-left text-xs font-medium text-gray-500 dark:text-gray-200 uppercase">CO₂ (kg)</th>
                </tr>
            </thead>
            <tbody class="bg-white dark:bg-gray-800 divide-y divide-gray-200 dark:divide-gray-700">
                @if (FilteredRoutes != null && FilteredRoutes.Count > 0)
                {
                    @foreach (var r in FilteredRoutes)
                    {
                        <tr>
                            <td class="px-4 py-2 text-xs">@r.Id.ToString().Substring(0, 8)...</td>
                            <td class="px-4 py-2">@r.DriverName</td>
                            <td class="px-4 py-2">
                                @if (r.Status == 1)
                                {
                                    <span class="inline-block px-2 py-1 bg-green-100 text-green-700 dark:bg-green-900/30 dark:text-green-400 rounded text-xs">Tamamlandı</span>
                                }
                                else if (r.Status == 0)
                                {
                                    <span class="inline-block px-2 py-1 bg-yellow-100 text-yellow-700 dark:bg-yellow-900/30 dark:text-yellow-400 rounded text-xs">Aktif</span>
                                }
                                else
                                {
                                    <span class="inline-block px-2 py-1 bg-gray-100 text-gray-600 dark:bg-gray-900/30 dark:text-gray-300 rounded text-xs">Bilinmiyor</span>
                                }
                            </td>
                            <td class="px-4 py-2">@r.CreatedAt.ToString("dd.MM.yyyy HH:mm")</td>
                            <td class="px-4 py-2">@($"{r.TotalDistanceKm:N2}")</td>
                            <td class="px-4 py-2">@($"{r.CO2EmissionKg:N2}")</td>
                        </tr>
                    }
                }
                else
                {
                    <tr>
                        <td colspan="6" class="px-4 py-4 text-center text-gray-500 dark:text-gray-400">Kayıt bulunamadı.</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

@code {
    private List<RouteReportDto> RouteList = new();
    private string search = "";

    private List<RouteReportDto> FilteredRoutes =>
        string.IsNullOrWhiteSpace(search)
            ? RouteList
            : RouteList.Where(r => !string.IsNullOrWhiteSpace(r.DriverName) && r.DriverName.Contains(search, StringComparison.OrdinalIgnoreCase)).ToList();

    protected override async Task OnInitializedAsync()
    {
        RouteList = await ReportService.GetRouteReportAsync();
    }
}
