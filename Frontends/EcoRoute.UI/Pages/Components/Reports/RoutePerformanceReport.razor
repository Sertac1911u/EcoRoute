@using EcoRoute.DtoLayer.ReportsDtos
@inject EcoRoute.UI.Services.ReportsServices.IReportService ReportService
@inject IJSRuntime JS

<div class="space-y-6">
    <!-- Statistik Kartlar -->
    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4">
        <div class="bg-white dark:bg-gray-800 rounded-lg shadow-md p-5 flex flex-col justify-between">
            <p class="text-sm text-gray-500 dark:text-gray-400">Toplam Rota</p>
            <h3 class="text-2xl font-bold text-gray-800 dark:text-white">@ReportList?.Count ?? 0</h3>
        </div>
        <div class="bg-white dark:bg-gray-800 rounded-lg shadow-md p-5 flex flex-col justify-between">
            <p class="text-sm text-gray-500 dark:text-gray-400">Ortalama Mesafe (km)</p>
            <h3 class="text-2xl font-bold text-gray-800 dark:text-white">@($"{AverageDistance:N2}")</h3>
        </div>
        <div class="bg-white dark:bg-gray-800 rounded-lg shadow-md p-5 flex flex-col justify-between">
            <p class="text-sm text-gray-500 dark:text-gray-400">Ortalama Süre (dk)</p>
            <h3 class="text-2xl font-bold text-gray-800 dark:text-white">@($"{AverageDurationMinutes:N2}")</h3>
        </div>
        <div class="bg-white dark:bg-gray-800 rounded-lg shadow-md p-5 flex flex-col justify-between">
            <p class="text-sm text-gray-500 dark:text-gray-400">Ortalama Verimlilik</p>
            <h3 class="text-2xl font-bold text-primary-500 dark:text-primary-400">@($"{AverageEfficiency:N2}")</h3>
        </div>
    </div>

    <!-- Performans Çizgi Grafiği -->
    <div class="bg-white dark:bg-gray-800 rounded-lg shadow-md p-6">
        <div class="flex justify-between items-center mb-3">
            <h3 class="text-lg font-semibold text-gray-800 dark:text-white">Rota Verimlilik Skoru (Tarih Bazlı)</h3>
        </div>
        <canvas id="routePerfChart" height="80"></canvas>
    </div>

    <!-- Tablo -->
    <div class="bg-white dark:bg-gray-800 rounded-lg shadow-md p-6 overflow-x-auto">
        <h3 class="text-lg font-semibold text-gray-800 dark:text-white mb-4">Rota Performans Tablosu</h3>
        <table class="min-w-full divide-y divide-gray-200 dark:divide-gray-700">
            <thead class="bg-gray-50 dark:bg-gray-700">
                <tr>
                    <th class="px-4 py-2 text-left text-xs font-medium text-gray-500 dark:text-gray-200 uppercase">Sürücü</th>
                    <th class="px-4 py-2 text-left text-xs font-medium text-gray-500 dark:text-gray-200 uppercase">Mesafe (km)</th>
                    <th class="px-4 py-2 text-left text-xs font-medium text-gray-500 dark:text-gray-200 uppercase">Süre (dk)</th>
                    <th class="px-4 py-2 text-left text-xs font-medium text-gray-500 dark:text-gray-200 uppercase">Verimlilik Skoru</th>
                    <th class="px-4 py-2 text-left text-xs font-medium text-gray-500 dark:text-gray-200 uppercase">Tamamlanma</th>
                </tr>
            </thead>
            <tbody class="bg-white dark:bg-gray-800 divide-y divide-gray-200 dark:divide-gray-700">
                @if (ReportList != null && ReportList.Count > 0)
                {
                    @foreach (var route in ReportList.OrderByDescending(r => r.CompletedAt))
                    {
                        <tr>
                            <td class="px-4 py-2">@route.DriverName</td>
                            <td class="px-4 py-2">@($"{route.DistanceKm:N2}")</td>
                            <td class="px-4 py-2">@($"{route.Duration.TotalMinutes:N2}")</td>
                            <td class="px-4 py-2">
                                <span class="font-semibold">@($"{route.EfficiencyScore:N2}")</span>
                            </td>
                            <td class="px-4 py-2">@route.CompletedAt.ToString("dd.MM.yyyy HH:mm")</td>
                        </tr>
                    }
                }
                else
                {
                    <tr>
                        <td colspan="5" class="px-4 py-4 text-center text-gray-500 dark:text-gray-400">Kayıt bulunamadı.</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>
<script>
    window.routePerformanceChart = (labels, data) => {
        if (!window.Chart) return;
        const ctx = document.getElementById('routePerfChart').getContext('2d');
        if (window._routePerfChartInstance) {
            window._routePerfChartInstance.destroy();
        }
        window._routePerfChartInstance = new Chart(ctx, {
            type: 'line',
            data: {
                labels: labels,
                datasets: [{
                    label: 'Verimlilik Skoru',
                    data: data,
                    tension: 0.4,
                    borderWidth: 3,
                    borderColor: 'rgba(16,185,129,0.9)',
                    backgroundColor: 'rgba(16,185,129,0.2)',
                    pointRadius: 4,
                    pointHoverRadius: 6
                }]
            },
            options: {
                responsive: true,
                plugins: {
                    legend: { display: false }
                },
                scales: {
                    y: {
                        min: 0,
                        title: { display: true, text: 'Skor' }
                    }
                }
            }
        });
    };
</script>
@code {
    private List<RoutePerformanceReportDto> ReportList = new();

    private double AverageDistance => ReportList.Any() ? ReportList.Average(r => r.DistanceKm) : 0;
    private double AverageDurationMinutes => ReportList.Any() ? ReportList.Average(r => r.Duration.TotalMinutes) : 0;
    private double AverageEfficiency => ReportList.Any() ? ReportList.Average(r => r.EfficiencyScore) : 0;

    protected override async Task OnInitializedAsync()
    {
        ReportList = await ReportService.GetRoutePerformanceReportAsync();

        // Tarih bazlı ortalama verimlilik çizgi grafiği için
        var chartLabels = ReportList
            .OrderBy(r => r.CompletedAt)
            .Select(r => r.CompletedAt.ToString("dd.MM.yyyy"))
            .ToArray();
        var chartData = ReportList
            .OrderBy(r => r.CompletedAt)
            .Select(r => r.EfficiencyScore)
            .ToArray();

        await JS.InvokeVoidAsync("routePerformanceChart", chartLabels, chartData);
    }
}
