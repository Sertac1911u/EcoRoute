// <auto-generated />
using System;
using EcoRoute.Supports.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EcoRoute.Settings.Migrations
{
    [DbContext(typeof(SettingsContext))]
    [Migration("20250526060646_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EcoRoute.Settings.Entities.Avatar", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Avatars");

                    b.HasData(
                        new
                        {
                            Id = new Guid("aaa09375-9210-4c3e-8a10-a470605aadef"),
                            Name = "Avatar 1",
                            Url = "https://api.dicebear.com/9.x/shapes/svg?seed=Can"
                        },
                        new
                        {
                            Id = new Guid("c6c1d684-6a48-440f-8295-28ea05aaea0c"),
                            Name = "Avatar 2",
                            Url = "https://api.dicebear.com/9.x/shapes/svg?seed=Olivia"
                        },
                        new
                        {
                            Id = new Guid("6a761e65-69cc-4495-ba89-a5b8b9d20090"),
                            Name = "Avatar 3",
                            Url = "https://api.dicebear.com/9.x/shapes/svg?seed=Atlas"
                        },
                        new
                        {
                            Id = new Guid("bdd6e1bc-a4d3-4b14-9c7e-2db63b3f3414"),
                            Name = "Avatar 4",
                            Url = "https://api.dicebear.com/9.x/shapes/svg?seed=Deniz"
                        },
                        new
                        {
                            Id = new Guid("6cce009f-c386-4e07-a861-db3ef77ab823"),
                            Name = "Avatar 5",
                            Url = "https://api.dicebear.com/9.x/shapes/svg?seed=Nova"
                        },
                        new
                        {
                            Id = new Guid("452023df-7041-49a6-b734-5126425b0df1"),
                            Name = "Avatar 6",
                            Url = "https://api.dicebear.com/9.x/shapes/svg?seed=Emir"
                        },
                        new
                        {
                            Id = new Guid("9ef68935-8de3-4738-b6e1-079bc2fd8dc4"),
                            Name = "Avatar 7",
                            Url = "https://api.dicebear.com/9.x/shapes/svg?seed=Jasper"
                        },
                        new
                        {
                            Id = new Guid("aafd1b74-1c4b-4fdf-a059-4803351e48ea"),
                            Name = "Avatar 8",
                            Url = "https://api.dicebear.com/9.x/shapes/svg?seed=Lina"
                        },
                        new
                        {
                            Id = new Guid("996fe3c8-2dbd-4df4-92b1-20b66b95c58f"),
                            Name = "Avatar 9",
                            Url = "https://api.dicebear.com/9.x/shapes/svg?seed=Arda"
                        },
                        new
                        {
                            Id = new Guid("5d4e5768-ca9e-4bcf-8f55-372448562cfb"),
                            Name = "Avatar 10",
                            Url = "https://api.dicebear.com/9.x/shapes/svg?seed=Felix"
                        },
                        new
                        {
                            Id = new Guid("c3a2e93c-d9f6-4f7f-9f3f-2ed508943d4b"),
                            Name = "Avatar 11",
                            Url = "https://api.dicebear.com/9.x/shapes/svg?seed=Zeynep"
                        },
                        new
                        {
                            Id = new Guid("f3c2c6ab-ed9d-47c4-bb8d-bf1346ba2d37"),
                            Name = "Avatar 12",
                            Url = "https://api.dicebear.com/9.x/shapes/svg?seed=Leo"
                        },
                        new
                        {
                            Id = new Guid("ac9f3a06-0b84-4947-8ad9-c9eacac72ebf"),
                            Name = "Avatar 13",
                            Url = "https://api.dicebear.com/9.x/shapes/svg?seed=Selin"
                        },
                        new
                        {
                            Id = new Guid("5cdff67f-c74f-4f5d-a5a3-8759ba4f0408"),
                            Name = "Avatar 14",
                            Url = "https://api.dicebear.com/9.x/shapes/svg?seed=Riley"
                        },
                        new
                        {
                            Id = new Guid("b5854e59-78df-439e-9d63-1502b8383628"),
                            Name = "Avatar 15",
                            Url = "https://api.dicebear.com/9.x/shapes/svg?seed=Ayaz"
                        });
                });

            modelBuilder.Entity("EcoRoute.Settings.Entities.DateFormat", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FormatString")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sample")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DateFormats");

                    b.HasData(
                        new
                        {
                            Id = new Guid("33333333-3333-3333-3333-333333333333"),
                            FormatString = "DD/MM/YYYY",
                            Sample = "31/12/2025"
                        },
                        new
                        {
                            Id = new Guid("33333333-3333-3333-3333-333333333334"),
                            FormatString = "MM/DD/YYYY",
                            Sample = "12/31/2025"
                        },
                        new
                        {
                            Id = new Guid("33333333-3333-3333-3333-333333333335"),
                            FormatString = "YYYY-MM-DD",
                            Sample = "2025-12-31"
                        });
                });

            modelBuilder.Entity("EcoRoute.Settings.Entities.FontType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CssValue")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("FontTypes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("11111111-1111-1111-1111-111111111111"),
                            CssValue = "'Open Sans', sans-serif",
                            Name = "Open Sans"
                        },
                        new
                        {
                            Id = new Guid("11111111-1111-1111-1111-111111111112"),
                            CssValue = "Georgia, serif",
                            Name = "Georgia"
                        },
                        new
                        {
                            Id = new Guid("11111111-1111-1111-1111-111111111113"),
                            CssValue = "'Montserrat', sans-serif",
                            Name = "Montserrat"
                        },
                        new
                        {
                            Id = new Guid("11111111-1111-1111-1111-111111111114"),
                            CssValue = "'Playfair Display', serif",
                            Name = "Playfair Display"
                        });
                });

            modelBuilder.Entity("EcoRoute.Settings.Entities.Language", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CultureCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Languages");

                    b.HasData(
                        new
                        {
                            Id = new Guid("22222222-2222-2222-2222-222222222222"),
                            CultureCode = "tr-TR",
                            Name = "Türkçe"
                        },
                        new
                        {
                            Id = new Guid("22222222-2222-2222-2222-222222222223"),
                            CultureCode = "en-US",
                            Name = "English"
                        },
                        new
                        {
                            Id = new Guid("22222222-2222-2222-2222-222222222224"),
                            CultureCode = "de-DE",
                            Name = "Deutsch"
                        });
                });

            modelBuilder.Entity("EcoRoute.Settings.Entities.SystemSetting", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ActiveSessionLimit")
                        .HasColumnType("int");

                    b.Property<string>("AvatarUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("DarkMode")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DateFormatId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("EmailNotifications")
                        .HasColumnType("bit");

                    b.Property<bool>("EnableAnimations")
                        .HasColumnType("bit");

                    b.Property<Guid?>("FontTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("GoogleMapsApiKey")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("LanguageId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("LocationTracking")
                        .HasColumnType("bit");

                    b.Property<bool>("PushNotifications")
                        .HasColumnType("bit");

                    b.Property<int>("SessionTimeout")
                        .HasColumnType("int");

                    b.Property<bool>("SmsNotifications")
                        .HasColumnType("bit");

                    b.Property<string>("ThemeColor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DateFormatId");

                    b.HasIndex("FontTypeId");

                    b.HasIndex("LanguageId");

                    b.ToTable("SystemSettings");

                    b.HasData(
                        new
                        {
                            Id = new Guid("44444444-4444-4444-4444-444444444444"),
                            ActiveSessionLimit = 0,
                            AvatarUrl = "https://api.dicebear.com/9.x/adventurer/svg?seed=Easton",
                            DarkMode = false,
                            DateFormatId = new Guid("33333333-3333-3333-3333-333333333333"),
                            EmailNotifications = true,
                            EnableAnimations = true,
                            FontTypeId = new Guid("11111111-1111-1111-1111-111111111111"),
                            GoogleMapsApiKey = "",
                            LanguageId = new Guid("22222222-2222-2222-2222-222222222222"),
                            LocationTracking = false,
                            PushNotifications = true,
                            SessionTimeout = 0,
                            SmsNotifications = false,
                            ThemeColor = "#2ba86d",
                            TwoFactorEnabled = false
                        });
                });

            modelBuilder.Entity("EcoRoute.Settings.Entities.ThemeColor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ThemeColors");

                    b.HasData(
                        new
                        {
                            Id = new Guid("9f9a823f-2b81-4985-939a-bd22ac1d3c91"),
                            Name = "Orijinal",
                            Value = "#2ba86d"
                        },
                        new
                        {
                            Id = new Guid("9dce0c0f-af8c-4137-84ba-be874c630e4b"),
                            Name = "Mavi",
                            Value = "#3B82F6"
                        },
                        new
                        {
                            Id = new Guid("641f071d-884f-416d-bb65-070a39c0fe8d"),
                            Name = "Kırmızı",
                            Value = "#EF4444"
                        },
                        new
                        {
                            Id = new Guid("cba6b11a-4151-4447-a546-4097d96ea327"),
                            Name = "Mor",
                            Value = "#8B5CF6"
                        },
                        new
                        {
                            Id = new Guid("ab027dcb-da39-408e-9eae-44641a93b63e"),
                            Name = "Pembe",
                            Value = "#EC4899"
                        },
                        new
                        {
                            Id = new Guid("3de0037a-bfdd-4369-aca4-2efeb25d83ff"),
                            Name = "Sarı",
                            Value = "#F59E0B"
                        },
                        new
                        {
                            Id = new Guid("fa15e5fd-2656-418d-8351-3c07b444136f"),
                            Name = "Turkuaz",
                            Value = "#06B6D4"
                        },
                        new
                        {
                            Id = new Guid("033f8fb5-270e-4621-a78a-b9377d66bb04"),
                            Name = "Indigo",
                            Value = "#6366F1"
                        },
                        new
                        {
                            Id = new Guid("5034ce99-ce6c-4cb6-84a8-54026b359d78"),
                            Name = "Lime",
                            Value = "#84CC16"
                        },
                        new
                        {
                            Id = new Guid("afdb6015-7e65-4ee6-b1de-100a2a6d76d7"),
                            Name = "Gri",
                            Value = "#6B7280"
                        },
                        new
                        {
                            Id = new Guid("4b1f0e59-b2e9-4320-8f90-4715a20f1b58"),
                            Name = "Turuncu",
                            Value = "#F97316"
                        },
                        new
                        {
                            Id = new Guid("539847fb-39b3-496c-875d-76b8f5e632f3"),
                            Name = "Teal",
                            Value = "#14B8A6"
                        });
                });

            modelBuilder.Entity("EcoRoute.Settings.Entities.SystemSetting", b =>
                {
                    b.HasOne("EcoRoute.Settings.Entities.DateFormat", "DateFormat")
                        .WithMany()
                        .HasForeignKey("DateFormatId");

                    b.HasOne("EcoRoute.Settings.Entities.FontType", "FontType")
                        .WithMany()
                        .HasForeignKey("FontTypeId");

                    b.HasOne("EcoRoute.Settings.Entities.Language", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId");

                    b.Navigation("DateFormat");

                    b.Navigation("FontType");

                    b.Navigation("Language");
                });
#pragma warning restore 612, 618
        }
    }
}
